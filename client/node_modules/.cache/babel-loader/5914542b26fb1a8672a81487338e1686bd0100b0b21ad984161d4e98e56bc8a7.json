{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vin\\xEDcius\\\\Documents\\\\Projects\\\\to-do-list\\\\client\\\\src\\\\components\\\\Formulario.jsx\";\nimport './css/Formulario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DOMAIN = 'http://localhost:9000';\nexport default function Formulario() {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"tarefa\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dados-tarefa\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"titulo-tarefa\",\n        placeholder: \"T\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"vencimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"descricao\",\n      placeholder: \"Descri\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"adicionar-tarefa\",\n      onClick: adicionarTarefa,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n// Adiciona uma tarefa no banco de dados\n_c = Formulario;\nconst adicionarTarefa = async () => {\n  let tarefa = montarTarefa(); // OK\n\n  if (!tarefa) return; // Se houve erro ao montar a tarefa, ele nao prossegue para a requisicao\n\n  // Configuracoes para o POST - OK\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(tarefa)\n  };\n\n  // Requisicao para a API\n  fetch(DOMAIN + '/adicionar-tarefa', options).then(response => {\n    if (response.ok) {\n      alert(\"Tarefa adicionada com sucesso!\");\n    } else {\n      alert(\"Houve um problema na resposta à requisição.\");\n    }\n  }).catch(error => {\n    alert(\"Erro ao adicionar tarefa: \" + error);\n  });\n};\n\n// Valida os campos e retorna um objeto com os dados da tarefa\nconst montarTarefa = () => {\n  let titulo = document.getElementById('titulo-tarefa').value;\n  let data = document.getElementById('vencimento').value;\n  let descricao = document.getElementById('descricao').value;\n  if (titulo === '' || titulo === null || data === '' || data === null) {\n    alert('Preencha todos os campos!');\n    return null;\n  }\n  return {\n    titulo: titulo,\n    vencimento: data,\n    completa: false,\n    descricao: descricao,\n    idUsuario: 1\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","DOMAIN","Formulario","id","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","adicionarTarefa","_c","tarefa","montarTarefa","options","method","headers","body","JSON","stringify","fetch","then","response","ok","alert","catch","error","titulo","document","getElementById","value","data","descricao","vencimento","completa","idUsuario","$RefreshReg$"],"sources":["C:/Users/Vinícius/Documents/Projects/to-do-list/client/src/components/Formulario.jsx"],"sourcesContent":["import './css/Formulario.css';\r\n\r\nconst DOMAIN = 'http://localhost:9000';\r\n\r\nexport default function Formulario() {\r\n  return (\r\n    <form id=\"tarefa\">\r\n\r\n      <div className=\"dados-tarefa\">\r\n        <input type=\"text\" id=\"titulo-tarefa\" placeholder=\"Título\" /> &nbsp;\r\n        <input type=\"date\" id=\"vencimento\" />\r\n      </div>\r\n\r\n      <textarea id=\"descricao\" placeholder=\"Descrição\"></textarea>\r\n\r\n      <button type=\"button\" id=\"adicionar-tarefa\" onClick={adicionarTarefa}>Adicionar</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// Adiciona uma tarefa no banco de dados\r\nconst adicionarTarefa = async () => {\r\n    let tarefa = montarTarefa(); // OK\r\n  \r\n    if (!tarefa) return; // Se houve erro ao montar a tarefa, ele nao prossegue para a requisicao\r\n    \r\n    // Configuracoes para o POST - OK\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(tarefa)\r\n    }\r\n\r\n    // Requisicao para a API\r\n    fetch(DOMAIN + '/adicionar-tarefa', options)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        alert(\"Tarefa adicionada com sucesso!\");\r\n      }\r\n      else {\r\n        alert(\"Houve um problema na resposta à requisição.\");\r\n      }\r\n    })\r\n    .catch(error => {\r\n      alert(\"Erro ao adicionar tarefa: \" + error);\r\n    });\r\n  }\r\n  \r\n  // Valida os campos e retorna um objeto com os dados da tarefa\r\n  const montarTarefa = () => {\r\n    let titulo = document.getElementById('titulo-tarefa').value;\r\n    let data = document.getElementById('vencimento').value;\r\n    let descricao = document.getElementById('descricao').value;\r\n  \r\n    if ((titulo === '' || titulo === null) ||\r\n        (data === '' || data === null)) {\r\n          alert('Preencha todos os campos!');\r\n          return null;\r\n    }\r\n  \r\n    return {\r\n        titulo: titulo,\r\n        vencimento: data,\r\n        completa: false,\r\n        descricao: descricao,\r\n        idUsuario: 1\r\n    }\r\n  }\r\n  "],"mappings":";AAAA,OAAO,sBAAsB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,oBACEF,OAAA;IAAMG,EAAE,EAAC,QAAQ;IAAAC,QAAA,gBAEfJ,OAAA;MAAKK,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BJ,OAAA;QAAOM,IAAI,EAAC,MAAM;QAACH,EAAE,EAAC,eAAe;QAACI,WAAW,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,SAC7D,eAAAX,OAAA;QAAOM,IAAI,EAAC,MAAM;QAACH,EAAE,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAENX,OAAA;MAAUG,EAAE,EAAC,WAAW;MAACI,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAE5DX,OAAA;MAAQM,IAAI,EAAC,QAAQ;MAACH,EAAE,EAAC,kBAAkB;MAACS,OAAO,EAAEC,eAAgB;MAAAT,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEX;;AAEA;AAAAG,EAAA,GAhBwBZ,UAAU;AAiBlC,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAIE,MAAM,GAAGC,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE7B,IAAI,CAACD,MAAM,EAAE,OAAO,CAAC;;EAErB;EACA,MAAME,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;EAC/B,CAAC;;EAED;EACAQ,KAAK,CAACtB,MAAM,GAAG,mBAAmB,EAAEgB,OAAO,CAAC,CAC3CO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACfC,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,MACI;MACHA,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACdF,KAAK,CAAC,4BAA4B,GAAGE,KAAK,CAAC;EAC7C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMb,YAAY,GAAGA,CAAA,KAAM;EACzB,IAAIc,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,KAAK;EAC3D,IAAIC,IAAI,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;EACtD,IAAIE,SAAS,GAAGJ,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;EAE1D,IAAKH,MAAM,KAAK,EAAE,IAAIA,MAAM,KAAK,IAAI,IAChCI,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,IAAK,EAAE;IAC9BP,KAAK,CAAC,2BAA2B,CAAC;IAClC,OAAO,IAAI;EACjB;EAEA,OAAO;IACHG,MAAM,EAAEA,MAAM;IACdM,UAAU,EAAEF,IAAI;IAChBG,QAAQ,EAAE,KAAK;IACfF,SAAS,EAAEA,SAAS;IACpBG,SAAS,EAAE;EACf,CAAC;AACH,CAAC;AAAA,IAAAxB,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}