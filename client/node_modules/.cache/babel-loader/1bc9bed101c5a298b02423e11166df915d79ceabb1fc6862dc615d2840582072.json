{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vin\\xEDcius\\\\Documents\\\\Projects\\\\to-do-list\\\\client\\\\src\\\\App.jsx\";\nimport './App.css';\nimport Formulario from './components/Formulario';\nimport Tarefa from './components/Tarefa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DOMAIN = 'localhost:9000';\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-app\",\n      children: \"Bem-vindo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Insira aqui a sua tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      adicionarTarefa: adicionarTarefa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Suas tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tarefa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n// Funcoes\n\n// Adiciona uma tarefa no banco de dados\n_c = App;\nconst adicionarTarefa = () => {\n  let tarefa = montarTarefa();\n\n  // Se o objeto for null, retorna\n  if (!tarefa) return;\n\n  // Configuracoes para o POST\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(tarefa)\n  };\n\n  // Requisicao para a API\n  fetch(DOMAIN + '/adicionar-tarefa', options).then(response => {\n    if (response.ok) {\n      alert(\"Tarefa adicionada com sucesso!\");\n    } else {\n      alert(\"Houve um problema na resposta à requisição.\");\n    }\n  }).catch(error => {\n    alert(\"Erro ao adicionar tarefa: \" + error);\n  });\n};\n\n// Valida os campos e retorna um objeto com os dados da tarefa\nconst montarTarefa = () => {\n  let titulo = document.getElementById('titulo-tarefa').value;\n  let data = document.getElementById('vencimento').value;\n  let descricao = document.getElementById('descricao').value;\n  if (titulo == '' || titulo == null || data == '' || data == null || descricao == '' || data == null) {\n    alert('Preencha todos os campos!');\n    return null;\n  }\n  return {\n    titulo: titulo,\n    vencimento: data,\n    completa: false,\n    descricao: descricao,\n    idUsuario: 1\n  };\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Formulario","Tarefa","jsxDEV","_jsxDEV","DOMAIN","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","adicionarTarefa","_c","tarefa","montarTarefa","options","method","headers","body","JSON","stringify","fetch","then","response","ok","alert","catch","error","titulo","document","getElementById","value","data","descricao","vencimento","completa","idUsuario","$RefreshReg$"],"sources":["C:/Users/Vinícius/Documents/Projects/to-do-list/client/src/App.jsx"],"sourcesContent":["import './App.css';\r\nimport Formulario from './components/Formulario';\r\nimport Tarefa from './components/Tarefa';\r\n\r\nconst DOMAIN = 'localhost:9000';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"card\">\r\n      <h1 className=\"titulo-app\">Bem-vindo</h1> <br />\r\n\r\n      <h3>Insira aqui a sua tarefa</h3>\r\n      <Formulario adicionarTarefa={adicionarTarefa}/>\r\n\r\n      <h3>Suas tarefas</h3>\r\n      <Tarefa />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Funcoes\r\n\r\n// Adiciona uma tarefa no banco de dados\r\nconst adicionarTarefa = () => {\r\n  let tarefa = montarTarefa();\r\n\r\n  // Se o objeto for null, retorna\r\n  if (!tarefa) return;\r\n  \r\n  // Configuracoes para o POST\r\n  const options = {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(tarefa)\r\n  }\r\n\r\n  // Requisicao para a API\r\n  fetch(DOMAIN + '/adicionar-tarefa', options).then((response) => {\r\n    if (response.ok) {\r\n      alert(\"Tarefa adicionada com sucesso!\");\r\n    }\r\n    else {\r\n      alert(\"Houve um problema na resposta à requisição.\");\r\n    }\r\n  }).catch(error => {\r\n    alert(\"Erro ao adicionar tarefa: \" + error);\r\n  });\r\n}\r\n\r\n// Valida os campos e retorna um objeto com os dados da tarefa\r\nconst montarTarefa = () => {\r\n  let titulo = document.getElementById('titulo-tarefa').value;\r\n  let data = document.getElementById('vencimento').value;\r\n  let descricao = document.getElementById('descricao').value;\r\n\r\n  if ((titulo == '' || titulo == null) ||\r\n      (data == '' || data == null) ||\r\n      (descricao == '' || data == null)) {\r\n        alert('Preencha todos os campos!');\r\n        return null;\r\n      }\r\n\r\n  return {\r\n      titulo: titulo,\r\n      vencimento: data,\r\n      completa: false,\r\n      descricao: descricao,\r\n      idUsuario: 1\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}